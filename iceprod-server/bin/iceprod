#! /bin/bash
#
# iceprod script for init boot scripts.  
# Usually this would be installed as /etc/init.d/iceprod with soft
# links put in from /etc/rc*.d
MASTER=$I3PREFIX/bin/iceprod_server.py
TOPBAR="*******************************************************"
WIDTH=`echo "$TOPBAR" | wc -c`
OPTS=""

if [ $# -ge 2 ]
then
  for param in $@
  do
    if [ $param != $1 ]; 
    then
      echo $param
    fi;
  done
fi
echo $OPTS

function printctr()
{
    LEN=`echo "$*" | wc -c`
    LOFFSET=$(( ($WIDTH-$LEN)/2 ))
    ROFFSET=$(( $WIDTH-$LOFFSET-$LEN ))

    FORMAT="*%${LOFFSET}s%s%${ROFFSET}s*\n"
    printf $FORMAT " " "$*" " "
}

function progress()
{
    STR=$1
    DELAY=0;
    if [ $# -ge 2 ]
    then
      DELAY=$3;
    fi
    LEN=`echo "$STR" | wc -c`
    LOFFSET=$(( ($WIDTH-$LEN) ))
    printf "$STR";
    for ((i=0;i<${LOFFSET};i+=1)); do
       printf '.'
       STR="$STR.";
       let mod=$i%20
       if [ $mod -eq 0 ];
       then
          sleep $DELAY;
       fi
    done
    printf $2;
}

function start() {
    STATUS=0;
    if [ -x $MASTER ]; then
        $MASTER --daemon $OPTS start
        STATUS=$?;
        if [ $STATUS -eq 0 ]; then
           progress "Starting up iceprod" " \e[0;32mok\e[m\n" 1;
        fi
    else
        printf "$MASTER is not executable. \n";
    fi
    if [ $STATUS -ne 0 ]; then
        progress "Starting up iceprod" " \e[0;31mfailed\e[m\n" 0;
        exit 1
    fi
    printf "\n";
}

function reload() {
    STATUS=0;
    if [ -x $MASTER ]; then
        $MASTER --daemon $OPTS reload
        STATUS=$?;
        if [ $STATUS -eq 0 ]; then
           progress "Reloading iceprod" " \e[0;32mok\e[m\n" 1;
        fi
    else
        printf "$MASTER is not executable. \n";
    fi
    if [ $STATUS -ne 0 ]; then
        progress "Reloading iceprod" " \e[0;31mfailed\e[m\n" 0;
        exit 1
    fi
    printf "\n";
}

function restart() {
    STATUS=0;
    if [ -x $MASTER ]; then
        $MASTER --daemon $OPTS restart
        STATUS=$?;
        if [ $STATUS -eq 0 ]; then
           progress "Restarting iceprod" " \e[0;32mok\e[m\n" 1;
        fi
    else
        printf "$MASTER is not executable. \n";
    fi
    if [ $STATUS -ne 0 ]; then
        progress "Restarting iceprod" " \e[0;31mfailed\e[m\n" 0;
    fi
    printf "\n";
}

function stop() {
    STATUS=0;
    if [ -x $MASTER ]; then
        $MASTER --daemon $OPTS stop
        STATUS=$?;
        if [ $STATUS -eq 0 ]; then
           progress "Shutting down iceprod" " \e[0;32mok\e[m\n" 1;
        fi
    else
        printf "$MASTER is not executable. \n";
    fi
    if [ $STATUS -ne 0 ]; then
        progress "Shutting down iceprod" " \e[0;31mfailed\e[m\n" 0;
    fi
    printf "\n";
}

function kill() {
    STATUS=0;
    if [ -x $MASTER ]; then
        $MASTER --daemon $OPTS kill
        STATUS=$?;
        if [ $STATUS -eq 0 ]; then
           progress "Shutting down iceprod (kill)" " \e[0;32mok\e[m\n" 1;
        fi
    else
        printf "$MASTER is not executable. \n";
    fi
    if [ $STATUS -ne 0 ]; then
        progress "Shutting down iceprod (kill)" " \e[0;31mfailed\e[m\n" 0;
    fi
    printf "\n";
}

case $1 in

'start')
	start
    ;;

'reload')
	reload
    ;;

'stop')
	stop
    ;;

'kill')
	kill
    ;;

'restart')
	restart
    ;;

*)
    echo "Usage: iceprod {start|stop|kill|restart|reload}"
    ;;

esac
